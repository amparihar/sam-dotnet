AWSTemplateFormatVersion: 2010-09-09
Description: sam-dnc-boilerplate
Transform: AWS::Serverless-2016-10-31

Parameters: 
  ServiceName:  
    Type: String
    Default: sam-items-api
    Description: Service Name

  ApiStageName: 
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - stage
      - perf
      - prod
    Description: Stage Param

Globals:
  Function:
    Runtime: dotnetcore3.1
    MemorySize: 128
    Timeout: 10
    Environment:
      Variables:
        ITEM_TABLE_NAME: !Ref ItemTable
        DYNAMODB_SERVICEURL: !Sub https://dynamodb.${AWS::Region}.amazonaws.com
        JWT_ACCESS_TOKEN: random hexa crypro 
  Api:
    Auth:
        DefaultAuthorizer: basicAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          basicAuthorizer:
            FunctionPayloadType: TOKEN
            FunctionArn: !GetAtt lambdaAuthorizer.Arn
            Identity:
              Header: Authorization
              #ValidationExpression: Bearer *
    Cors: 
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"


Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref ApiStageName
        
      Models:
        SaveItemRequestValidator:
          $schema: http://json-schema.org/draft-07/schema#
          type: object
          required:
            - id
            - key
            - name
          properties:
            id:
              type: string
            key:
              type: string
            name:
              type: string
  
  getItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/
      Handler: sam-dnc::Lambda.Functions.GetItemsFunction::Run
      Description: Query Items by id and key
      Policies: 
        - DynamoDBReadPolicy:
            TableName: !Ref ItemTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/query
            Method: POST
            RestApiId: !Ref ApiGatewayApi

  saveItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/
      Handler: sam-dnc::Lambda.Functions.SaveItemFunction::Run
      Description: Save Item
      MemorySize: 512
      Timeout: 120
      Policies: 
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api
            Method: POST
            RestApiId: !Ref ApiGatewayApi
            # RequestModel:
            #   Model: SaveItemRequestValidator
            #   Required: True

  lambdaAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/
      Handler: sam-dnc::Lambda.Functions.Authorizer::Authorize

  ItemTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub "${ServiceName}-Item-${ApiStageName}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: key
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: key
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  GetItemsFunction:
    Description: "Query Items Fn ARN"
    Value: !GetAtt getItemsFunction.Arn
  SaveItemFunction:
    Description: "Save Items Fn ARN"
    Value: !GetAtt saveItemFunction.Arn
  ItemsTable:
    Description: "Item DynamoDB Table Name"
    Value: !Ref ItemTable
  ApiGateway:
    Description: "API EndPoint"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}"


