AWSTemplateFormatVersion: 2010-09-09
Description: sam-dnc-boilerplate
Transform: AWS::Serverless-2016-10-31
Parameters:
  ServiceName:
    Type: String
    Default: sam-items-api
    Description: Service Name
  ApiStageName:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - stage
    - perf
    - prod
    Description: Stage Param
  SeedItems:
    Type: List<String>
    Description: Seed Item Values
Globals:
  Function:
    Runtime: dotnetcore3.1
    MemorySize: 128
    Timeout: 10
    Environment:
      Variables:
        ITEM_TABLE_NAME:
          Ref: ItemTable
        DYNAMODB_SERVICEURL:
          Fn::Sub: https://dynamodb.${AWS::Region}.amazonaws.com
        JWT_ACCESS_TOKEN: random hexa crypro
  Api:
    Auth:
      DefaultAuthorizer: basicAuthorizer
      AddDefaultAuthorizerToCorsPreflight: false
      Authorizers:
        basicAuthorizer:
          FunctionPayloadType: TOKEN
          FunctionArn:
            Fn::GetAtt:
            - lambdaAuthorizerFunction
            - Arn
          Identity:
            Header: Authorization
    Cors:
      AllowMethods: '''*'''
      AllowHeaders: '''*'''
      AllowOrigin: '''*'''
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: ApiStageName
      Models:
        SaveItemRequestValidator:
          $schema: http://json-schema.org/draft-07/schema#
          type: object
          required:
          - id
          - key
          - name
          properties:
            id:
              type: string
            key:
              type: string
            name:
              type: string
  getItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getItemsFunction
      Handler: sam-dnc::Lambda.Functions.GetItemsFunction::Run
      Description: Query Items by id and key
      Timeout: 120
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: ItemTable
      - SSMParameterReadPolicy:
          ParameterName:
            Fn::Sub: sam-dnc-boilerplate/${ApiStageName}
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api/query
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
  getItemsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${getItemsFunction}
  saveItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: saveItemFunction
      Handler: sam-dnc::Lambda.Functions.SaveItemFunction::Run
      Description: Save Item
      Timeout: 120
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ItemTable
      - SSMParameterReadPolicy:
          ParameterName:
            Fn::Sub: sam-dnc-boilerplate/${ApiStageName}
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
  saveItemFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${saveItemFunction}
  lambdaAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdaAuthorizerFunction
      Handler: sam-dnc::Lambda.Functions.Authorizer::Authorize
  lambdaAuthorizerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${lambdaAuthorizerFunction}
  initDynamoDBFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: initDynamoDBFunction
      Handler: sam-dnc::Lambda.Functions.InitDynamoDBFunction::Run
      Description: Seed DynamoDb Data
      Timeout: 120
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ItemTable
      - SSMParameterReadPolicy:
          ParameterName:
            Fn::Sub: sam-dnc-boilerplate/${ApiStageName}
      - Statement:
          Effect: Allow
          Action:
          - dynamodb:DeleteTable
          Resource:
          - Fn::GetAtt:
            - ItemTable
            - Arn
  initDynamoDBFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${initDynamoDBFunction}
  initDynamoDB:
    Type: AWS::CloudFormation::CustomResource
    DependsOn: initDynamoDBFunction
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - initDynamoDBFunction
        - Arn
      SeedData:
        Ref: SeedItems
  ssmSimpleParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: /sam-dnc-boilerplate/${ApiStageName}/authToken
      Type: String
      Value: any unencrypted simple string value
  ItemTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: ${ServiceName}-Item-${ApiStageName}
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: key
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      - AttributeName: key
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
Outputs:
  InitDynamoDBFunction:
    Description: Seed Db
    Value:
      Fn::GetAtt:
      - initDynamoDBFunction
      - Arn
  GetItemsFunction:
    Description: Query Items Fn ARN
    Value:
      Fn::GetAtt:
      - getItemsFunction
      - Arn
  SaveItemFunction:
    Description: Save Items Fn ARN
    Value:
      Fn::GetAtt:
      - saveItemFunction
      - Arn
  ItemsTable:
    Description: Item DynamoDB Table Name
    Value:
      Ref: ItemTable
  ApiGateway:
    Description: API EndPoint
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/api
